/**
 * Versify API
 * Versify API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiDeleteResponse from '../model/ApiDeleteResponse';
import ApiListResponse from '../model/ApiListResponse';
import ApiSearchResponse from '../model/ApiSearchResponse';
import Asset8 from '../model/Asset8';
import Contact8 from '../model/Contact8';
import HTTPValidationError from '../model/HTTPValidationError';
import Mint from '../model/Mint';
import SearchContacts from '../model/SearchContacts';

/**
* Mints service.
* @module api/MintsApi
* @version 1.0.0
*/
export default class MintsApi {

    /**
    * Constructs a new MintsApi. 
    * @alias module:api/MintsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createMintV2MintsPost operation.
     * @callback module:api/MintsApi~createMintV2MintsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Mint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create mint
     * Create a mint
     * @param {module:model/Asset8} asset8 
     * @param {Object} opts Optional parameters
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~createMintV2MintsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Mint}
     */
    createMintV2MintsPost(asset8, opts, callback) {
      opts = opts || {};
      let postBody = asset8;
      // verify the required parameter 'asset8' is set
      if (asset8 === undefined || asset8 === null) {
        throw new Error("Missing the required parameter 'asset8' when calling createMintV2MintsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Mint;
      return this.apiClient.callApi(
        '/v2/mints', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createMintV2MintsPost_0 operation.
     * @callback module:api/MintsApi~createMintV2MintsPost_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Mint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create mint
     * Create a mint
     * @param {module:model/Asset8} asset8 
     * @param {Object} opts Optional parameters
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~createMintV2MintsPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Mint}
     */
    createMintV2MintsPost_0(asset8, opts, callback) {
      opts = opts || {};
      let postBody = asset8;
      // verify the required parameter 'asset8' is set
      if (asset8 === undefined || asset8 === null) {
        throw new Error("Missing the required parameter 'asset8' when calling createMintV2MintsPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Mint;
      return this.apiClient.callApi(
        '/v2/mints', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMintV2MintsMintIdDelete operation.
     * @callback module:api/MintsApi~deleteMintV2MintsMintIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiDeleteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete mint
     * Delete an mint
     * @param {String} mintId Unique identifier of the contact
     * @param {Object} opts Optional parameters
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~deleteMintV2MintsMintIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiDeleteResponse}
     */
    deleteMintV2MintsMintIdDelete(mintId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'mintId' is set
      if (mintId === undefined || mintId === null) {
        throw new Error("Missing the required parameter 'mintId' when calling deleteMintV2MintsMintIdDelete");
      }

      let pathParams = {
        'mint_id': mintId
      };
      let queryParams = {
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiDeleteResponse;
      return this.apiClient.callApi(
        '/v2/mints/{mint_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMintV2MintsMintIdDelete_0 operation.
     * @callback module:api/MintsApi~deleteMintV2MintsMintIdDelete_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiDeleteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete mint
     * Delete an mint
     * @param {String} mintId Unique identifier of the contact
     * @param {Object} opts Optional parameters
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~deleteMintV2MintsMintIdDelete_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiDeleteResponse}
     */
    deleteMintV2MintsMintIdDelete_0(mintId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'mintId' is set
      if (mintId === undefined || mintId === null) {
        throw new Error("Missing the required parameter 'mintId' when calling deleteMintV2MintsMintIdDelete_0");
      }

      let pathParams = {
        'mint_id': mintId
      };
      let queryParams = {
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiDeleteResponse;
      return this.apiClient.callApi(
        '/v2/mints/{mint_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMintV2MintsMintIdGet operation.
     * @callback module:api/MintsApi~getMintV2MintsMintIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Mint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get mint
     * Get a mint
     * @param {String} mintId Unique identifier of the contact
     * @param {Object} opts Optional parameters
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~getMintV2MintsMintIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Mint}
     */
    getMintV2MintsMintIdGet(mintId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'mintId' is set
      if (mintId === undefined || mintId === null) {
        throw new Error("Missing the required parameter 'mintId' when calling getMintV2MintsMintIdGet");
      }

      let pathParams = {
        'mint_id': mintId
      };
      let queryParams = {
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Mint;
      return this.apiClient.callApi(
        '/v2/mints/{mint_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMintV2MintsMintIdGet_0 operation.
     * @callback module:api/MintsApi~getMintV2MintsMintIdGet_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Mint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get mint
     * Get a mint
     * @param {String} mintId Unique identifier of the contact
     * @param {Object} opts Optional parameters
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~getMintV2MintsMintIdGet_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Mint}
     */
    getMintV2MintsMintIdGet_0(mintId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'mintId' is set
      if (mintId === undefined || mintId === null) {
        throw new Error("Missing the required parameter 'mintId' when calling getMintV2MintsMintIdGet_0");
      }

      let pathParams = {
        'mint_id': mintId
      };
      let queryParams = {
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Mint;
      return this.apiClient.callApi(
        '/v2/mints/{mint_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listMintsV2MintsGet operation.
     * @callback module:api/MintsApi~listMintsV2MintsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List mints
     * List mints with optional filters and pagination parameters
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageNum Page number (default to 1)
     * @param {Number} opts.pageSize Page size (default to 10)
     * @param {String} opts.collection Collection ID
     * @param {String} opts.status Collection status
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~listMintsV2MintsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiListResponse}
     */
    listMintsV2MintsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page_num': opts['pageNum'],
        'page_size': opts['pageSize'],
        'collection': opts['collection'],
        'status': opts['status']
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiListResponse;
      return this.apiClient.callApi(
        '/v2/mints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listMintsV2MintsGet_0 operation.
     * @callback module:api/MintsApi~listMintsV2MintsGet_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List mints
     * List mints with optional filters and pagination parameters
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageNum Page number (default to 1)
     * @param {Number} opts.pageSize Page size (default to 10)
     * @param {String} opts.collection Collection ID
     * @param {String} opts.status Collection status
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~listMintsV2MintsGet_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiListResponse}
     */
    listMintsV2MintsGet_0(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page_num': opts['pageNum'],
        'page_size': opts['pageSize'],
        'collection': opts['collection'],
        'status': opts['status']
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiListResponse;
      return this.apiClient.callApi(
        '/v2/mints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchMintsV2MintsSearchPost operation.
     * @callback module:api/MintsApi~searchMintsV2MintsSearchPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiSearchResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search mints
     * Search mints with query string
     * @param {module:model/SearchContacts} searchContacts 
     * @param {Object} opts Optional parameters
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~searchMintsV2MintsSearchPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiSearchResponse}
     */
    searchMintsV2MintsSearchPost(searchContacts, opts, callback) {
      opts = opts || {};
      let postBody = searchContacts;
      // verify the required parameter 'searchContacts' is set
      if (searchContacts === undefined || searchContacts === null) {
        throw new Error("Missing the required parameter 'searchContacts' when calling searchMintsV2MintsSearchPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiSearchResponse;
      return this.apiClient.callApi(
        '/v2/mints/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchMintsV2MintsSearchPost_0 operation.
     * @callback module:api/MintsApi~searchMintsV2MintsSearchPost_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiSearchResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search mints
     * Search mints with query string
     * @param {module:model/SearchContacts} searchContacts 
     * @param {Object} opts Optional parameters
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~searchMintsV2MintsSearchPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiSearchResponse}
     */
    searchMintsV2MintsSearchPost_0(searchContacts, opts, callback) {
      opts = opts || {};
      let postBody = searchContacts;
      // verify the required parameter 'searchContacts' is set
      if (searchContacts === undefined || searchContacts === null) {
        throw new Error("Missing the required parameter 'searchContacts' when calling searchMintsV2MintsSearchPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiSearchResponse;
      return this.apiClient.callApi(
        '/v2/mints/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMintV2MintsMintIdPut operation.
     * @callback module:api/MintsApi~updateMintV2MintsMintIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Mint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update mint
     * Update an mint
     * @param {String} mintId Unique identifier of the contact
     * @param {module:model/Contact8} contact8 
     * @param {Object} opts Optional parameters
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~updateMintV2MintsMintIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Mint}
     */
    updateMintV2MintsMintIdPut(mintId, contact8, opts, callback) {
      opts = opts || {};
      let postBody = contact8;
      // verify the required parameter 'mintId' is set
      if (mintId === undefined || mintId === null) {
        throw new Error("Missing the required parameter 'mintId' when calling updateMintV2MintsMintIdPut");
      }
      // verify the required parameter 'contact8' is set
      if (contact8 === undefined || contact8 === null) {
        throw new Error("Missing the required parameter 'contact8' when calling updateMintV2MintsMintIdPut");
      }

      let pathParams = {
        'mint_id': mintId
      };
      let queryParams = {
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Mint;
      return this.apiClient.callApi(
        '/v2/mints/{mint_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMintV2MintsMintIdPut_0 operation.
     * @callback module:api/MintsApi~updateMintV2MintsMintIdPut_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Mint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update mint
     * Update an mint
     * @param {String} mintId Unique identifier of the contact
     * @param {module:model/Contact8} contact8 
     * @param {Object} opts Optional parameters
     * @param {String} opts.versifyAccount Versify Account ID
     * @param {module:api/MintsApi~updateMintV2MintsMintIdPut_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Mint}
     */
    updateMintV2MintsMintIdPut_0(mintId, contact8, opts, callback) {
      opts = opts || {};
      let postBody = contact8;
      // verify the required parameter 'mintId' is set
      if (mintId === undefined || mintId === null) {
        throw new Error("Missing the required parameter 'mintId' when calling updateMintV2MintsMintIdPut_0");
      }
      // verify the required parameter 'contact8' is set
      if (contact8 === undefined || contact8 === null) {
        throw new Error("Missing the required parameter 'contact8' when calling updateMintV2MintsMintIdPut_0");
      }

      let pathParams = {
        'mint_id': mintId
      };
      let queryParams = {
      };
      let headerParams = {
        'Versify-Account': opts['versifyAccount']
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Mint;
      return this.apiClient.callApi(
        '/v2/mints/{mint_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
