/**
 * Versify API
 * Versify API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BodyAccessTokenV2OauthAccessTokenPost from '../model/BodyAccessTokenV2OauthAccessTokenPost';
import HTTPValidationError from '../model/HTTPValidationError';

/**
* Auth service.
* @module api/AuthApi
* @version 1.0.0
*/
export default class AuthApi {

    /**
    * Constructs a new AuthApi. 
    * @alias module:api/AuthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the accessTokenV2OauthAccessTokenPost operation.
     * @callback module:api/AuthApi~accessTokenV2OauthAccessTokenPostCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Access Token
     * @param {module:model/BodyAccessTokenV2OauthAccessTokenPost} bodyAccessTokenV2OauthAccessTokenPost 
     * @param {module:api/AuthApi~accessTokenV2OauthAccessTokenPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    accessTokenV2OauthAccessTokenPost(bodyAccessTokenV2OauthAccessTokenPost, callback) {
      let postBody = bodyAccessTokenV2OauthAccessTokenPost;
      // verify the required parameter 'bodyAccessTokenV2OauthAccessTokenPost' is set
      if (bodyAccessTokenV2OauthAccessTokenPost === undefined || bodyAccessTokenV2OauthAccessTokenPost === null) {
        throw new Error("Missing the required parameter 'bodyAccessTokenV2OauthAccessTokenPost' when calling accessTokenV2OauthAccessTokenPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/oauth/access_token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the accessTokenV2OauthAccessTokenPost_0 operation.
     * @callback module:api/AuthApi~accessTokenV2OauthAccessTokenPost_0Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Access Token
     * @param {module:model/BodyAccessTokenV2OauthAccessTokenPost} bodyAccessTokenV2OauthAccessTokenPost 
     * @param {module:api/AuthApi~accessTokenV2OauthAccessTokenPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    accessTokenV2OauthAccessTokenPost_0(bodyAccessTokenV2OauthAccessTokenPost, callback) {
      let postBody = bodyAccessTokenV2OauthAccessTokenPost;
      // verify the required parameter 'bodyAccessTokenV2OauthAccessTokenPost' is set
      if (bodyAccessTokenV2OauthAccessTokenPost === undefined || bodyAccessTokenV2OauthAccessTokenPost === null) {
        throw new Error("Missing the required parameter 'bodyAccessTokenV2OauthAccessTokenPost' when calling accessTokenV2OauthAccessTokenPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/oauth/access_token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authorizeV2OauthAuthorizeGet operation.
     * @callback module:api/AuthApi~authorizeV2OauthAuthorizeGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Authorize
     * @param {String} responseType The type of response to return.
     * @param {String} clientId The client ID to use for authentication.
     * @param {String} redirectUri The redirect URI to use for authentication.
     * @param {module:api/AuthApi~authorizeV2OauthAuthorizeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    authorizeV2OauthAuthorizeGet(responseType, clientId, redirectUri, callback) {
      let postBody = null;
      // verify the required parameter 'responseType' is set
      if (responseType === undefined || responseType === null) {
        throw new Error("Missing the required parameter 'responseType' when calling authorizeV2OauthAuthorizeGet");
      }
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling authorizeV2OauthAuthorizeGet");
      }
      // verify the required parameter 'redirectUri' is set
      if (redirectUri === undefined || redirectUri === null) {
        throw new Error("Missing the required parameter 'redirectUri' when calling authorizeV2OauthAuthorizeGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'response_type': responseType,
        'client_id': clientId,
        'redirect_uri': redirectUri
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/oauth/authorize', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authorizeV2OauthAuthorizeGet_0 operation.
     * @callback module:api/AuthApi~authorizeV2OauthAuthorizeGet_0Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Authorize
     * @param {String} responseType The type of response to return.
     * @param {String} clientId The client ID to use for authentication.
     * @param {String} redirectUri The redirect URI to use for authentication.
     * @param {module:api/AuthApi~authorizeV2OauthAuthorizeGet_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    authorizeV2OauthAuthorizeGet_0(responseType, clientId, redirectUri, callback) {
      let postBody = null;
      // verify the required parameter 'responseType' is set
      if (responseType === undefined || responseType === null) {
        throw new Error("Missing the required parameter 'responseType' when calling authorizeV2OauthAuthorizeGet_0");
      }
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling authorizeV2OauthAuthorizeGet_0");
      }
      // verify the required parameter 'redirectUri' is set
      if (redirectUri === undefined || redirectUri === null) {
        throw new Error("Missing the required parameter 'redirectUri' when calling authorizeV2OauthAuthorizeGet_0");
      }

      let pathParams = {
      };
      let queryParams = {
        'response_type': responseType,
        'client_id': clientId,
        'redirect_uri': redirectUri
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/oauth/authorize', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
