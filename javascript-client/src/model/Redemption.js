/**
 * Versify API
 * Versify API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Redemption model module.
 * @module model/Redemption
 * @version 1.0.0
 */
class Redemption {
    /**
     * Constructs a new <code>Redemption</code>.
     * A redemption document in the database.
     * @alias module:model/Redemption
     * @param account {String} The account the redemption belongs to
     * @param contact {String} The ID of the contact redeeming the reward.
     * @param reward {String} The reward the redemption is for
     */
    constructor(account, contact, reward) { 
        
        Redemption.initialize(this, account, contact, reward);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, account, contact, reward) { 
        obj['account'] = account;
        obj['contact'] = contact;
        obj['reward'] = reward;
    }

    /**
     * Constructs a <code>Redemption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Redemption} obj Optional instance to populate.
     * @return {module:model/Redemption} The populated <code>Redemption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Redemption();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('account')) {
                obj['account'] = ApiClient.convertToType(data['account'], 'String');
            }
            if (data.hasOwnProperty('contact')) {
                obj['contact'] = ApiClient.convertToType(data['contact'], 'String');
            }
            if (data.hasOwnProperty('coupon_code')) {
                obj['coupon_code'] = ApiClient.convertToType(data['coupon_code'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('discount_amount')) {
                obj['discount_amount'] = ApiClient.convertToType(data['discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('discount_code')) {
                obj['discount_code'] = ApiClient.convertToType(data['discount_code'], 'String');
            }
            if (data.hasOwnProperty('gift_amount')) {
                obj['gift_amount'] = ApiClient.convertToType(data['gift_amount'], 'Number');
            }
            if (data.hasOwnProperty('gift_code')) {
                obj['gift_code'] = ApiClient.convertToType(data['gift_code'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('pass_barcode')) {
                obj['pass_barcode'] = ApiClient.convertToType(data['pass_barcode'], 'String');
            }
            if (data.hasOwnProperty('pass_platform')) {
                obj['pass_platform'] = ApiClient.convertToType(data['pass_platform'], 'String');
            }
            if (data.hasOwnProperty('pass_serial_number')) {
                obj['pass_serial_number'] = ApiClient.convertToType(data['pass_serial_number'], 'String');
            }
            if (data.hasOwnProperty('reward')) {
                obj['reward'] = ApiClient.convertToType(data['reward'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Redemption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Redemption</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Redemption.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['_id'] && !(typeof data['_id'] === 'string' || data['_id'] instanceof String)) {
            throw new Error("Expected the field `_id` to be a primitive type in the JSON string but got " + data['_id']);
        }
        // ensure the json data is a string
        if (data['account'] && !(typeof data['account'] === 'string' || data['account'] instanceof String)) {
            throw new Error("Expected the field `account` to be a primitive type in the JSON string but got " + data['account']);
        }
        // ensure the json data is a string
        if (data['contact'] && !(typeof data['contact'] === 'string' || data['contact'] instanceof String)) {
            throw new Error("Expected the field `contact` to be a primitive type in the JSON string but got " + data['contact']);
        }
        // ensure the json data is a string
        if (data['coupon_code'] && !(typeof data['coupon_code'] === 'string' || data['coupon_code'] instanceof String)) {
            throw new Error("Expected the field `coupon_code` to be a primitive type in the JSON string but got " + data['coupon_code']);
        }
        // ensure the json data is a string
        if (data['discount_code'] && !(typeof data['discount_code'] === 'string' || data['discount_code'] instanceof String)) {
            throw new Error("Expected the field `discount_code` to be a primitive type in the JSON string but got " + data['discount_code']);
        }
        // ensure the json data is a string
        if (data['gift_code'] && !(typeof data['gift_code'] === 'string' || data['gift_code'] instanceof String)) {
            throw new Error("Expected the field `gift_code` to be a primitive type in the JSON string but got " + data['gift_code']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['pass_barcode'] && !(typeof data['pass_barcode'] === 'string' || data['pass_barcode'] instanceof String)) {
            throw new Error("Expected the field `pass_barcode` to be a primitive type in the JSON string but got " + data['pass_barcode']);
        }
        // ensure the json data is a string
        if (data['pass_platform'] && !(typeof data['pass_platform'] === 'string' || data['pass_platform'] instanceof String)) {
            throw new Error("Expected the field `pass_platform` to be a primitive type in the JSON string but got " + data['pass_platform']);
        }
        // ensure the json data is a string
        if (data['pass_serial_number'] && !(typeof data['pass_serial_number'] === 'string' || data['pass_serial_number'] instanceof String)) {
            throw new Error("Expected the field `pass_serial_number` to be a primitive type in the JSON string but got " + data['pass_serial_number']);
        }
        // ensure the json data is a string
        if (data['reward'] && !(typeof data['reward'] === 'string' || data['reward'] instanceof String)) {
            throw new Error("Expected the field `reward` to be a primitive type in the JSON string but got " + data['reward']);
        }

        return true;
    }


}

Redemption.RequiredProperties = ["account", "contact", "reward"];

/**
 * Unique identifier for the redemption
 * @member {String} _id
 */
Redemption.prototype['_id'] = undefined;

/**
 * The account the redemption belongs to
 * @member {String} account
 */
Redemption.prototype['account'] = undefined;

/**
 * The ID of the contact redeeming the reward.
 * @member {String} contact
 */
Redemption.prototype['contact'] = undefined;

/**
 * The coupon code used to redeem the reward
 * @member {String} coupon_code
 */
Redemption.prototype['coupon_code'] = undefined;

/**
 * The timestamp when the event was created
 * @member {Number} created
 */
Redemption.prototype['created'] = undefined;

/**
 * The amount of the discount used to redeem the reward
 * @member {Number} discount_amount
 */
Redemption.prototype['discount_amount'] = undefined;

/**
 * The discount code used to redeem the reward
 * @member {String} discount_code
 */
Redemption.prototype['discount_code'] = undefined;

/**
 * The amount of the gift used to redeem the reward
 * @member {Number} gift_amount
 */
Redemption.prototype['gift_amount'] = undefined;

/**
 * The gift code used to redeem the reward
 * @member {String} gift_code
 */
Redemption.prototype['gift_code'] = undefined;

/**
 * Arbitrary metadata associated with the object
 * @member {Object} metadata
 */
Redemption.prototype['metadata'] = undefined;

/**
 * The object type. Always \"redemption\"
 * @member {String} object
 * @default 'redemption'
 */
Redemption.prototype['object'] = 'redemption';

/**
 * The barcode of the pass used to redeem the reward
 * @member {String} pass_barcode
 */
Redemption.prototype['pass_barcode'] = undefined;

/**
 * The platform of the pass used to redeem the reward
 * @member {String} pass_platform
 */
Redemption.prototype['pass_platform'] = undefined;

/**
 * The serial number of the pass used to redeem the reward
 * @member {String} pass_serial_number
 */
Redemption.prototype['pass_serial_number'] = undefined;

/**
 * The reward the redemption is for
 * @member {String} reward
 */
Redemption.prototype['reward'] = undefined;

/**
 * The timestamp when the event was last updated
 * @member {Number} updated
 */
Redemption.prototype['updated'] = undefined;






export default Redemption;

