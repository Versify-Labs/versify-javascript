name: Publish Versify NPM Package

on:
  push:
    branches: [main]

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ matrix.node-version }}-${{ runner.OS }}-build-${{ hashFiles('package.json') }}
      - name: Build
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: npm install
      - name: Publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          package_name=$(node -p "require('./package.json').name")
          remote_repo="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"

          echo 'Publishing $package_name to NPM'
          ls -al

          # Initialize git
          echo "Initializing git"
          git config http.sslVerify false
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          git show-ref
          git branch --verbose

          # Get the current version from NPM
          echo "Getting current version from NPM"
          current_version=$(npm view $package_name version)
          echo "Current version: $current_version"

          # Bump the version
          echo "Bumping version"
          new_version=$(npm version --git-tag-version=false patch)
          echo "New version: $new_version"

          # Authenticate with NPM
          echo "Authenticating with NPM"
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "scope=@versifylabs" >> .npmrc

          # Publish to NPM
          echo "Publishing to NPM"
          npm publish --access public

          # Push the new version to GitHub
          echo "Pushing package.json with version $new_version"
          git checkout package.json
          git tag $new_version
          git push $remote_repo --tags
