/**
 * Versify API
 * Versify API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VersifylabsVersifyClient);
  }
}(this, function(expect, VersifylabsVersifyClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VersifylabsVersifyClient.NotesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NotesApi', function() {
    describe('createNoteV2NotesPost', function() {
      it('should call createNoteV2NotesPost successfully', function(done) {
        //uncomment below and update the code to test createNoteV2NotesPost
        //instance.createNoteV2NotesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNoteV2NotesPost_0', function() {
      it('should call createNoteV2NotesPost_0 successfully', function(done) {
        //uncomment below and update the code to test createNoteV2NotesPost_0
        //instance.createNoteV2NotesPost_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNoteV2NotesNoteIdDelete', function() {
      it('should call deleteNoteV2NotesNoteIdDelete successfully', function(done) {
        //uncomment below and update the code to test deleteNoteV2NotesNoteIdDelete
        //instance.deleteNoteV2NotesNoteIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNoteV2NotesNoteIdDelete_0', function() {
      it('should call deleteNoteV2NotesNoteIdDelete_0 successfully', function(done) {
        //uncomment below and update the code to test deleteNoteV2NotesNoteIdDelete_0
        //instance.deleteNoteV2NotesNoteIdDelete_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNoteV2NotesNoteIdGet', function() {
      it('should call getNoteV2NotesNoteIdGet successfully', function(done) {
        //uncomment below and update the code to test getNoteV2NotesNoteIdGet
        //instance.getNoteV2NotesNoteIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNoteV2NotesNoteIdGet_0', function() {
      it('should call getNoteV2NotesNoteIdGet_0 successfully', function(done) {
        //uncomment below and update the code to test getNoteV2NotesNoteIdGet_0
        //instance.getNoteV2NotesNoteIdGet_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNotesV2NotesGet', function() {
      it('should call listNotesV2NotesGet successfully', function(done) {
        //uncomment below and update the code to test listNotesV2NotesGet
        //instance.listNotesV2NotesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNotesV2NotesGet_0', function() {
      it('should call listNotesV2NotesGet_0 successfully', function(done) {
        //uncomment below and update the code to test listNotesV2NotesGet_0
        //instance.listNotesV2NotesGet_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchNotesV2NotesSearchPost', function() {
      it('should call searchNotesV2NotesSearchPost successfully', function(done) {
        //uncomment below and update the code to test searchNotesV2NotesSearchPost
        //instance.searchNotesV2NotesSearchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchNotesV2NotesSearchPost_0', function() {
      it('should call searchNotesV2NotesSearchPost_0 successfully', function(done) {
        //uncomment below and update the code to test searchNotesV2NotesSearchPost_0
        //instance.searchNotesV2NotesSearchPost_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNoteV2NotesNoteIdPut', function() {
      it('should call updateNoteV2NotesNoteIdPut successfully', function(done) {
        //uncomment below and update the code to test updateNoteV2NotesNoteIdPut
        //instance.updateNoteV2NotesNoteIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNoteV2NotesNoteIdPut_0', function() {
      it('should call updateNoteV2NotesNoteIdPut_0 successfully', function(done) {
        //uncomment below and update the code to test updateNoteV2NotesNoteIdPut_0
        //instance.updateNoteV2NotesNoteIdPut_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
